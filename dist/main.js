(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([e.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n.content {\n    height: 100vh;\n    width: auto;\n    display: grid;\n    grid-template-columns: 400px minmax(800px,1fr) 500px;\n}\n\n.card-1 {\n    background-color: white;\n    display: grid;\n    grid-template-rows: 100px 100px 1fr;\n}\n.card-1 > * {\n    margin: 20px;\n}\n.wrap-flex {\n    display: flex;\n    gap: 20px;\n    flex-direction: column;\n    justify-content: center;\n    align-items: start;\n}\n\n.project-btn,\n.project-input {\n    width: 150px;\n    opacity: 0;\n}\n\n.opacity {\n    opacity: 1;\n}\n\n.wrapper > p{\n    font-size: 24px;\n}\n.project-list > * {\n    margin: 10px;\n    font-size: 18px;\n}\n.project-items {\n    list-style: none;\n}\n\n.active {\n    background-color: rgba(121, 120, 120,0.4);\n}\n\n.card2-wrap {\n    padding: 1rem;\n    display: grid;\n    grid-template-columns: 1fr;\n}\n\n.wrap-div {\n    display: grid;\n    grid-template-columns: repeat(4,1fr);\n    align-items: center;\n    justify-items: center;\n    border: 1px solid;\n}\n\n.content > * {\n    border: 1px solid;\n}\n\n.card-3 {\n    display: grid;\n    grid-template-rows: 1fr 100px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,WAAW;IACX,aAAa;IACb,oDAAoD;AACxD;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,mCAAmC;AACvC;AACA;IACI,YAAY;AAChB;AACA;IACI,aAAa;IACb,SAAS;IACT,sBAAsB;IACtB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;;IAEI,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,eAAe;AACnB;AACA;IACI,YAAY;IACZ,eAAe;AACnB;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;IACI,aAAa;IACb,aAAa;IACb,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,oCAAoC;IACpC,mBAAmB;IACnB,qBAAqB;IACrB,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,6BAA6B;AACjC",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n.content {\n    height: 100vh;\n    width: auto;\n    display: grid;\n    grid-template-columns: 400px minmax(800px,1fr) 500px;\n}\n\n.card-1 {\n    background-color: white;\n    display: grid;\n    grid-template-rows: 100px 100px 1fr;\n}\n.card-1 > * {\n    margin: 20px;\n}\n.wrap-flex {\n    display: flex;\n    gap: 20px;\n    flex-direction: column;\n    justify-content: center;\n    align-items: start;\n}\n\n.project-btn,\n.project-input {\n    width: 150px;\n    opacity: 0;\n}\n\n.opacity {\n    opacity: 1;\n}\n\n.wrapper > p{\n    font-size: 24px;\n}\n.project-list > * {\n    margin: 10px;\n    font-size: 18px;\n}\n.project-items {\n    list-style: none;\n}\n\n.active {\n    background-color: rgba(121, 120, 120,0.4);\n}\n\n.card2-wrap {\n    padding: 1rem;\n    display: grid;\n    grid-template-columns: 1fr;\n}\n\n.wrap-div {\n    display: grid;\n    grid-template-columns: repeat(4,1fr);\n    align-items: center;\n    justify-items: center;\n    border: 1px solid;\n}\n\n.content > * {\n    border: 1px solid;\n}\n\n.card-3 {\n    display: grid;\n    grid-template-rows: 1fr 100px;\n}"],sourceRoot:""}]);const d=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var d=0;d<this.length;d++){var i=this[d][0];null!=i&&(c[i]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},c=[],d=0;d<e.length;d++){var i=e[d],s=o.base?i[0]+o.base:i[0],l=a[s]||0,p="".concat(s," ").concat(l);a[s]=l+1;var u=n(p),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var A=r(m,o);o.byIndex=d,t.splice(d,0,{identifier:p,updater:A,references:1})}c.push(p)}return c}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var d=n(a[c]);t[d].references--}for(var i=o(e,r),s=0;s<a.length;s++){var l=n(a[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=i}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{n.d(o,{m:()=>b,j:()=>x});var e=n(379),t=n.n(e),r=n(795),a=n.n(r),c=n(569),d=n.n(c),i=n(565),s=n.n(i),l=n(216),p=n.n(l),u=n(589),m=n.n(u),A=n(426),C={};C.styleTagTransform=m(),C.setAttributes=s(),C.insert=d().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=p(),t()(A.Z,C),A.Z&&A.Z.locals&&A.Z.locals;const f=document.createElement("h1"),h=document.createElement("div");function y(e){const t=document.querySelector(".card-2");f.textContent=`${e} To-Do List`,t.appendChild(f),function(e){let t=x.projects[e].length;for(;h.hasChildNodes();)h.removeChild(h.firstChild);for(let n=0;n<t;n++){const t=x.projects[e][n].title,o=x.projects[e][n].priority,r=x.projects[e][n].dueDate,a=x.projects[e][n].isCompleted;v(t,o,r,a),console.log(t,o,r,a)}}(e)}function v(e,t,n,o){const r=document.querySelector(".card-2"),a=document.createElement("div");a.classList.add("wrap-div");const c=document.createElement("h2");c.textContent=e;const d=document.createElement("p");d.textContent=t;const i=document.createElement("p");i.textContent=n;const s=document.createElement("p");s.textContent=o,a.appendChild(c),a.appendChild(d),a.appendChild(i),a.appendChild(s),h.appendChild(a),r.appendChild(h)}let g;h.classList.add("card2-wrap");const x=new class{constructor(){this.projects={}}addCategory(e){this.projects[e]||(this.projects[e]=[])}addProject(e,t,n,o,r){this.projects[e]||(this.projects[e]=[]);const a={title:t,priority:n,dueDate:o,isCompleted:r};this.projects[e].push(a)}returnProjects(){return this.projects}};x.addProject("new","learn","low","now","true"),x.addProject("daily","sex","low","now","false"),x.addProject("weekly","porn","low","now","false"),x.addProject("monthly","fap","low","now","false"),x.addProject("Drink Water","hydrate","high","now","completed"),x.addProject("Drink Water","head water","medium","today","not completed"),x.addProject("Drink Water","refill","low","today","completed"),x.addProject("Drink Water","refill","low","today","completed"),x.addProject("Drink Water","refill","low","today","completed"),x.addProject("Drink Water","refill","low","today","completed"),x.addProject("Drink Water","refill","low","today","completed"),x.addProject("Drink Water","refill","low","today","completed");const b=Object.keys(x.projects);console.log(b),function(){const e=document.querySelector("#content");e.classList.add("content");for(let t=0;t<3;t++){const n=document.createElement("div");n.setAttribute("class",`card-${t+1} content-card`),e.appendChild(n)}const t=document.createElement("h2");t.textContent="TO DO TRACKER";const n=document.createElement("div");n.classList.add("wrap-flex"),t.classList.add("project-title");const o=document.createElement("button");o.classList.add("add-project"),o.textContent="ADD PROJECTS";const r=document.createElement("input");r.setAttribute("type","text"),r.classList.add("project-input");const a=document.createElement("button");a.textContent="Submit",a.classList.add("project-btn"),o.addEventListener("click",(()=>{r.classList.toggle("opacity"),a.classList.toggle("opacity")}));const c=document.querySelector(".card-1");c.appendChild(t),n.appendChild(o),n.appendChild(r),n.appendChild(a),c.appendChild(n);const d=document.createElement("div");d.classList.add("wrapper");const i=document.createElement("p");function s(){for(;d.hasChildNodes();)d.removeChild(d.firstChild);const e=document.createElement("ul");e.classList.add("project-list");for(let t=0;t<b.length;t++){const n=document.createElement("li");n.textContent=b[t],n.classList.add("project-items"),e.appendChild(n)}d.appendChild(i),d.appendChild(e),c.appendChild(d),function(){const e=document.querySelectorAll(".project-items");e.forEach((t=>{t.addEventListener("click",(()=>{e.forEach((e=>{e.classList.remove("active")})),g=t.textContent,y(g),t.classList.add("active")}))}))}()}i.textContent="Projects",s(),a.addEventListener("click",(()=>{const e=r.value;x.addCategory(e),b.push(e),s(),r.value=""}))}(),function(){const e=document.querySelector(".card-3"),t=document.createElement("div"),n=document.createElement("div"),o=document.createElement("form");o.id="taskForm";const r=document.createElement("label");r.textContent="Title:",o.appendChild(r);const a=document.createElement("input");a.type="text",a.id="title",a.name="title",a.required=!0,o.appendChild(a),o.appendChild(document.createElement("br"));const c=document.createElement("label");c.textContent="Priority:",o.appendChild(c);const d=document.createElement("select");d.id="priority",d.name="priority";const i=["Low","Medium","High"];for(let e=0;e<i.length;e++){const t=document.createElement("option");t.value=i[e].toLowerCase(),t.textContent=i[e],"Medium"===i[e]&&(t.selected=!0),d.appendChild(t)}o.appendChild(d),o.appendChild(document.createElement("br"));const s=document.createElement("label");s.textContent="Status:",o.appendChild(s);const l=document.createElement("select");l.id="status",l.name="status";const p=["Completed","Not Completed"];for(let e=0;e<p.length;e++){const t=document.createElement("option");t.value=p[e].toLowerCase(),t.textContent=p[e],"Not Completed"===p[e]&&(t.selected=!0),l.appendChild(t)}o.appendChild(l),o.appendChild(document.createElement("br"));const u=document.createElement("label");u.textContent="Due Date:",o.appendChild(u);const m=document.createElement("input");m.type="date",m.id="dueDate",m.name="dueDate",o.appendChild(m),o.appendChild(document.createElement("br"));const A=document.createElement("input");A.type="button",A.value="Submit",A.onclick=function(){submitForm()},o.appendChild(A),t.appendChild(o);const C=document.createElement("button");C.textContent="Add New ToDo",n.appendChild(C),e.appendChild(t),e.appendChild(n)}(),console.log(x.projects.daily[0].title)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,